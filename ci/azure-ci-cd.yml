# Main pipeline spec for CI/CD on Azure Pipelines.

trigger:
  branches:
    include:
    - master
    - rc

stages:
- stage: BuildAndTest
  jobs:

  # Main Linux build(s) that create release artifacts
  - job: Linux
    pool:
      vmImage: ubuntu-16.04
    steps:
    - template: azure-build-and-test.yml
      parameters:
        primaryRcBuild: ${{ eq(variables['Build.SourceBranchName'], 'rc') }}
    variables:
      TARGET: x86_64-unknown-linux-gnu
      TOOLCHAIN: stable

  # As far as I can tell, there is no way to matrix over a template *parameter*?
  # So we need a separate group for the "canary" jobs that test build success but
  # shouldn't create release artifacts.
  - job: Linux_canary
    pool:
      vmImage: ubuntu-16.04
    steps:
    - template: azure-build-and-test.yml
      parameters:
        canaryBuild: true
    strategy:
      matrix:
        beta:
          TARGET: x86_64-unknown-linux-gnu
          TOOLCHAIN: beta
        nightly:
          TARGET: x86_64-unknown-linux-gnu
          TOOLCHAIN: nightly

  # Mac builds
  - job: macOS
    pool:
      vmImage: macos-10.15
    steps:
    - template: azure-build-and-test.yml
    variables:
      TARGET: x86_64-apple-darwin
      TOOLCHAIN: stable

  # Windows builds
  - job: Windows
    pool:
      vmImage: windows-2019
    steps:
    - template: azure-build-and-test.yml
    strategy:
      matrix:
        x86_64-msvc:
          TARGET: x86_64-pc-windows-msvc
          TOOLCHAIN: stable-x86_64-pc-windows-msvc
        x86_64-gnu:
          TARGET: x86_64-pc-windows-gnu
          TOOLCHAIN: stable-x86_64-pc-windows-gnu


# If all of those succeed and we're not in a pull request, run the deployment
# pipeline. If we're specifically on the `rc` branch, this will finalize any
# releases.
- stage: Deploy
  condition: and(succeeded('BuildAndTest'), not(eq(variables['build.reason'], 'PullRequest')))
  jobs:
  - deployment: Deploy
    environment: Deploy
    displayName: Deploy
    pool:
      vmImage: ubuntu-16.04

    variables:
    - group: Deployment Credentials

    strategy:
      runOnce:
        deploy:
          steps:
            - template: azure-deployment.yml
              parameters:
                rcBuild: ${{ eq(variables['Build.SourceBranchName'], 'rc') }}
